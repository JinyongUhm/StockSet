'------------------------------------------------------------------------------
' <auto-generated>
'     이 코드는 도구를 사용하여 생성되었습니다.
'     런타임 버전:2.0.50727.1434
'
'     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
'     이러한 변경 내용이 손실됩니다.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'이 소스 코드가 Microsoft.VSDesigner, 버전 2.0.50727.1434에서 자동으로 생성되었습니다.
'
Namespace youiwe
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSMSSoap", [Namespace]:="http://webservice.youiwe.co.kr/")>  _
    Partial Public Class ServiceSMS
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private SendSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendSMSwncOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendSMSReserveOperationCompleted As System.Threading.SendOrPostCallback

        Private ReserveCancleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRemainCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.sms_vbex.My.MySettings.Default.sms_vbex_youiwe_ServiceSMS
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event SendSMSCompleted As SendSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event SendSMSwncCompleted As SendSMSwncCompletedEventHandler
        
        '''<remarks/>
        Public Event SendSMSReserveCompleted As SendSMSReserveCompletedEventHandler

        '''<remarks/>
        Public Event ReserveCancleCompleted As ReserveCancleCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRemainCountCompleted As GetRemainCountCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.youiwe.co.kr/SendSMS", RequestNamespace:="http://webservice.youiwe.co.kr/", ResponseNamespace:="http://webservice.youiwe.co.kr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendSMS(ByVal smsID As String, ByVal hashValue As String, ByVal senderPhone As String, ByVal receivePhone As String, ByVal smsContent As String) As String
            Dim results() As Object = Me.Invoke("SendSMS", New Object() {smsID, hashValue, senderPhone, receivePhone, smsContent})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendSMSAsync(ByVal smsID As String, ByVal hashValue As String, ByVal senderPhone As String, ByVal receivePhone As String, ByVal smsContent As String)
            Me.SendSMSAsync(smsID, hashValue, senderPhone, receivePhone, smsContent, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendSMSAsync(ByVal smsID As String, ByVal hashValue As String, ByVal senderPhone As String, ByVal receivePhone As String, ByVal smsContent As String, ByVal userState As Object)
            If (Me.SendSMSOperationCompleted Is Nothing) Then
                Me.SendSMSOperationCompleted = AddressOf Me.OnSendSMSOperationCompleted
            End If
            Me.InvokeAsync("SendSMS", New Object() {smsID, hashValue, senderPhone, receivePhone, smsContent}, Me.SendSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendSMSCompleted(Me, New SendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.youiwe.co.kr/SendSMSwnc", RequestNamespace:="http://webservice.youiwe.co.kr/", ResponseNamespace:="http://webservice.youiwe.co.kr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendSMSwnc(ByVal smsID As String, ByVal hashValue As String, ByVal gubun As String, ByVal senderPhone As String, ByVal receivePhone As String, ByVal smsContent As String) As String
            Dim results() As Object = Me.Invoke("SendSMSwnc", New Object() {smsID, hashValue, gubun, senderPhone, receivePhone, smsContent})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendSMSwncAsync(ByVal smsID As String, ByVal hashValue As String, ByVal gubun As String, ByVal senderPhone As String, ByVal receivePhone As String, ByVal smsContent As String)
            Me.SendSMSwncAsync(smsID, hashValue, gubun, senderPhone, receivePhone, smsContent, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendSMSwncAsync(ByVal smsID As String, ByVal hashValue As String, ByVal gubun As String, ByVal senderPhone As String, ByVal receivePhone As String, ByVal smsContent As String, ByVal userState As Object)
            If (Me.SendSMSwncOperationCompleted Is Nothing) Then
                Me.SendSMSwncOperationCompleted = AddressOf Me.OnSendSMSwncOperationCompleted
            End If
            Me.InvokeAsync("SendSMSwnc", New Object() {smsID, hashValue, gubun, senderPhone, receivePhone, smsContent}, Me.SendSMSwncOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendSMSwncOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendSMSwncCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendSMSwncCompleted(Me, New SendSMSwncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.youiwe.co.kr/SendSMSReserve", RequestNamespace:="http://webservice.youiwe.co.kr/", ResponseNamespace:="http://webservice.youiwe.co.kr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendSMSReserve(ByVal smsID As String, ByVal hashValue As String, ByVal senderPhone As String, ByVal receivePhone As String, ByVal smsContent As String, ByVal reserveDate As String, ByVal reserveTime As String, ByVal userDefine As String) As String
            Dim results() As Object = Me.Invoke("SendSMSReserve", New Object() {smsID, hashValue, senderPhone, receivePhone, smsContent, reserveDate, reserveTime, userDefine})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendSMSReserveAsync(ByVal smsID As String, ByVal hashValue As String, ByVal senderPhone As String, ByVal receivePhone As String, ByVal smsContent As String, ByVal reserveDate As String, ByVal reserveTime As String, ByVal userDefine As String)
            Me.SendSMSReserveAsync(smsID, hashValue, senderPhone, receivePhone, smsContent, reserveDate, reserveTime, userDefine, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendSMSReserveAsync(ByVal smsID As String, ByVal hashValue As String, ByVal senderPhone As String, ByVal receivePhone As String, ByVal smsContent As String, ByVal reserveDate As String, ByVal reserveTime As String, ByVal userDefine As String, ByVal userState As Object)
            If (Me.SendSMSReserveOperationCompleted Is Nothing) Then
                Me.SendSMSReserveOperationCompleted = AddressOf Me.OnSendSMSReserveOperationCompleted
            End If
            Me.InvokeAsync("SendSMSReserve", New Object() {smsID, hashValue, senderPhone, receivePhone, smsContent, reserveDate, reserveTime, userDefine}, Me.SendSMSReserveOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendSMSReserveOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendSMSReserveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendSMSReserveCompleted(Me, New SendSMSReserveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.youiwe.co.kr/ReserveCancle", RequestNamespace:="http://webservice.youiwe.co.kr/", ResponseNamespace:="http://webservice.youiwe.co.kr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReserveCancle(ByVal smsID As String, ByVal hashValue As String, ByVal searchValue As String, ByVal mode As String) As Integer
            Dim results() As Object = Me.Invoke("ReserveCancle", New Object() {smsID, hashValue, searchValue, mode})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReserveCancleAsync(ByVal smsID As String, ByVal hashValue As String, ByVal searchValue As String, ByVal mode As String)
            Me.ReserveCancleAsync(smsID, hashValue, searchValue, mode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReserveCancleAsync(ByVal smsID As String, ByVal hashValue As String, ByVal searchValue As String, ByVal mode As String, ByVal userState As Object)
            If (Me.ReserveCancleOperationCompleted Is Nothing) Then
                Me.ReserveCancleOperationCompleted = AddressOf Me.OnReserveCancleOperationCompleted
            End If
            Me.InvokeAsync("ReserveCancle", New Object() {smsID, hashValue, searchValue, mode}, Me.ReserveCancleOperationCompleted, userState)
        End Sub
        
        Private Sub OnReserveCancleOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReserveCancleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReserveCancleCompleted(Me, New ReserveCancleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.youiwe.co.kr/GetRemainCount", RequestNamespace:="http://webservice.youiwe.co.kr/", ResponseNamespace:="http://webservice.youiwe.co.kr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRemainCount(ByVal smsID As String, ByVal hashValue As String) As Integer
            Dim results() As Object = Me.Invoke("GetRemainCount", New Object() {smsID, hashValue})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRemainCountAsync(ByVal smsID As String, ByVal hashValue As String)
            Me.GetRemainCountAsync(smsID, hashValue, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRemainCountAsync(ByVal smsID As String, ByVal hashValue As String, ByVal userState As Object)
            If (Me.GetRemainCountOperationCompleted Is Nothing) Then
                Me.GetRemainCountOperationCompleted = AddressOf Me.OnGetRemainCountOperationCompleted
            End If
            Me.InvokeAsync("GetRemainCount", New Object() {smsID, hashValue}, Me.GetRemainCountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRemainCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRemainCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRemainCountCompleted(Me, New GetRemainCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")>  _
    Public Delegate Sub SendSMSCompletedEventHandler(ByVal sender As Object, ByVal e As SendSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")>  _
    Public Delegate Sub SendSMSwncCompletedEventHandler(ByVal sender As Object, ByVal e As SendSMSwncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendSMSwncCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")>  _
    Public Delegate Sub SendSMSReserveCompletedEventHandler(ByVal sender As Object, ByVal e As SendSMSReserveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendSMSReserveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")>  _
    Public Delegate Sub ReserveCancleCompletedEventHandler(ByVal sender As Object, ByVal e As ReserveCancleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReserveCancleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")>  _
    Public Delegate Sub GetRemainCountCompletedEventHandler(ByVal sender As Object, ByVal e As GetRemainCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRemainCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
End Namespace
